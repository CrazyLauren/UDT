{% set project_name = name|upper %}
{% set target_name = name|lower + '_python' %}

if((NOT Python3_FOUND AND NOT PYTHONLIBS_FOUND) OR NOT SWIG_FOUND)
    set(${PROJECT_NAME}_BUILD_COMPONENT_PYTHON
        FALSE
        CACHE BOOL "Build Python bindings"
        FORCE)
    message(WARNING "Python Component disabled because SWIG or Python was not found")
    return()
endif()

set(PYTHON_SITE_PACKAGES
    "${${PROJECT_NAME}_INSTALL_PREFIX}${CMAKE_INSTALL_LIBDIR}/python${Python3_VERSION_MAJOR}.${Python3_VERSION_MINOR}/dist-packages/${PROJECT_NAME}")

set(_TARGET_NAME {{ target_name }})

include(${SWIG_USE_FILE})

set (_PUBLIC_LIBRARIS
		CRAZY_LAUREN::customer
		)
set (_PUBLIC_INCLUDE_DIR
		#
		)
set (_PRIVATE_INCLUDE_DIR
		${CMAKE_CURRENT_SOURCE_DIR}/../include
		${CMAKE_BINARY_DIR}/include
		${CMAKE_CURRENT_SOURCE_DIR}
		)

helper_add_swig_python_library(${_TARGET_NAME}
                                _PUBLIC_LIBRARIS
                                _PUBLIC_INCLUDE_DIR
                                _PRIVATE_INCLUDE_DIR
								"${CMAKE_BINARY_DIR}/src/${_TARGET_NAME}/swig"
								${PYTHON_SITE_PACKAGES}
								)
set(${SWIG_MODULE_${_TARGET_NAME}_REAL_NAME}_PYTHONS_DEPENDS_MODULES
        "UDT>=0.5"
        CACHE INTERNAL "Depends python modules "
	    FORCE
    )

install(TARGETS ${SWIG_MODULE_${_TARGET_NAME}_REAL_NAME}
        LIBRARY DESTINATION ${PYTHON_SITE_PACKAGES} COMPONENT libraries
        ARCHIVE DESTINATION ${PYTHON_SITE_PACKAGES} COMPONENT libraries
        RUNTIME DESTINATION ${PYTHON_SITE_PACKAGES} COMPONENT libraries
        )

