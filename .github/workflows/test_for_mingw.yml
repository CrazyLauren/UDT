name: CI-MinGW

on: [push]

jobs:
  build_mingw:
    strategy:
      matrix:
        configuration: [Release]
        compiler: [MinGW]
        arch: [Win32]
    name: Windows
    runs-on: windows-2019
    steps:
      - name: Prepare Environment
        run: |
            $msyspath="msys64"
            choco install msys2 --params="/InstallDir:$msyspath /NoPath" -y
            echo "::add-path::$msyspath\usr\bin"
            echo "::add-path::$msyspath"
            echo "::add-path::$msyspath\mingw64\bin"
            echo "::add-path::$msyspath\mingw64\lib"
            echo "::add-path::$msyspath\mingw64\include"
    - name: Install gcc and gmp
      - uses: actions/checkout@v1
      - name: Install mingwX64 Packages
        shell: cmd
        working-directory: msys64
        run: |
            usr\bin\pacman.exe -S --noconfirm base-devel
            usr\bin\pacman.exe -S --noconfirm mingw-w64-x86_64-gcc
      - name: Prepare environment
        shell: cmd
        run: |
          echo set MSYS_ROOT=msys64>> environment.bat
          echo set PATH=%%MSYS_ROOT%%\usr\bin;%%PATH%%>> environment.bat
          echo set PATH=%%MSYS_ROOT%%\mingw64\bin;%%PATH%%>> environment.bat
          echo set MSYSTEM=MINGW64>> environment.bat
          type environment.bat
          call environment.bat
          set
      - name: Install boost
        shell: bash
        run: |
          wget -nv http://downloads.sourceforge.net/project/boost/boost/1.56.0/boost_1_56_0.tar.bz2
          tar --bzip2 -xf boost_1_56_0.tar.bz2
      - name: Configure CMake
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
          ARCHITECTURE: ${{ matrix.arch }}
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -DBOOST_ROOT=./boost_1_56_0 -DCMAKE_BUILD_TYPE=$CONFIGURATION  -DCMAKE_SH="CMAKE_SH-NOTFOUND" -G "MinGW Makefiles" ..

      - name: Compile
        working-directory: ./build
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: bash
        run: |
          cmake --build . --config "$CONFIGURATION" --target install
      - name:  Testing RTC
        working-directory: ./build/binary/bin
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: bash
        run: |
          timeout --signal=SIGABRT 100 ./Kernel -c ./test/test_kernel.json &
          timeout --signal=SIGABRT 100 ./test_rtc
          taskkill //F //IM Kernel.exe
      - name: Store artifact
        uses: actions/upload-artifact@master
        with:
          name: UDT-bunary-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.configuration }}-${{ github.sha }}
          path: build/binary/