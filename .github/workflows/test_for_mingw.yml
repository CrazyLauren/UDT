name: CI-MinGW

on: [push]

jobs:
  build_mingw:
    strategy:
      matrix:
        configuration: [Release]
        compiler: [MinGW]
        arch: [i686]
    name: Windows
    runs-on: windows-2019
    env:
      MSYS_ROOT: ${{ matrix.compiler}}${{ matrix.arch}}
    steps:
      - uses: actions/checkout@v1
      - name: Prepare Environment
        shell: cmd
        run: |
              git clone https://github.com/msys2/msys2-ci-base.git %GITHUB_WORKSPACE%\msys64
              %GITHUB_WORKSPACE%\msys64\usr\bin\rm -rf %GITHUB_WORKSPACE%\msys64\.git
      - name: Update
        shell: cmd
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          %GITHUB_WORKSPACE%\msys64\usr\bin\pacman --noconfirm -Syyuu
      - name: Install mingwX86 Packages
        env:
          MINGW_ARCH: ${{ matrix.arch }}
        shell: cmd
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          %GITHUB_WORKSPACE%\msys64\usr\bin\pacman --noconfirm --needed -S git base-devel mingw-w64-%MINGW_ARCH%-toolchain mingw-w64-%MINGW_ARCH%-boost mingw-w64-%MINGW_ARCH%-cmake
          %GITHUB_WORKSPACE%\msys64\usr\bin\pacman --noconfirm -Scc
      - name: Configure CMake
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: cmd
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\mingw64\bin;%GITHUB_WORKSPACE%\msys64\mingw32\bin;%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          mkdir build
          cd build
          cmake -DBOOST_ROOT=./boost_1_56_0 -DCMAKE_BUILD_TYPE=%CONFIGURATION%  -DCMAKE_SH="CMAKE_SH-NOTFOUND" -G "MinGW Makefiles" ..
      - name: Compile
        working-directory: ./build
        env:
          CONFIGURATION: ${{ matrix.configuration }}
        shell: cmd
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\mingw64\bin;%GITHUB_WORKSPACE%\msys64\mingw32\bin;%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          cmake --build . --config "%CONFIGURATION%" --target install
      - name:  Testing RTC
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: cmd
        run: |
          cd /build/binary/bin
          set PATH=%GITHUB_WORKSPACE%\msys64\mingw64\bin;%GITHUB_WORKSPACE%\msys64\mingw32\bin;%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          timeout --signal=SIGABRT 100 Kernel.exe -c test/test_kernel.json &
          timeout --signal=SIGABRT 100 test_rtc
          taskkill /F /IM Kernel.exe
      - name:  Testing inheritance
        working-directory: ./build/binary/bin
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: cmd
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\mingw64\bin;%GITHUB_WORKSPACE%\msys64\mingw32\bin;%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          timeout --signal=SIGABRT 100 Kernel.exe &
          timeout --signal=SIGABRT 100 test_inheritance
          taskkill /F /IM Kernel.exe
      - name:  Testing errors
        working-directory: ./build/binary/bin
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: cmd
        if: matrix.configuration == 'Release'
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\mingw64\bin;%GITHUB_WORKSPACE%\msys64\mingw32\bin;%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          timeout --signal=SIGABRT 100 Kernel.exe &
          timeout --signal=SIGABRT 100 test_errors
          taskkill /F /IM Kernel.exe
      - name:  Testing high load
        working-directory: ./build/binary/bin
        env:
          CONFIGURATION: ${{ matrix.configuration }}
          COMPILER: ${{ matrix.compiler }}
        shell: cmd
        if: matrix.configuration == 'Release'
        run: |
          set PATH=%GITHUB_WORKSPACE%\msys64\mingw64\bin;%GITHUB_WORKSPACE%\msys64\mingw32\bin;%GITHUB_WORKSPACE%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
          timeout --signal=SIGABRT 100 Kernel.exe &
          timeout --signal=SIGABRT 100 test_of_speed
          taskkill /F /IM Kernel.exe
      - name: Store artifact
        uses: actions/upload-artifact@master
        with:
          name: UDT-bunary-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.configuration }}-${{ github.sha }}
          path: build/binary/