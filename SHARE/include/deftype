/*
 * deftype
 *
 * Copyright Â© 2016  https://github.com/CrazyLauren
 *
 *  Created on: 12.04.2012
 *      Author:  https://github.com/CrazyLauren
 *
 * Distributed under MPL 2.0 (See accompanying file LICENSE.txt or copy at
 * https://www.mozilla.org/en-US/MPL/2.0)
 */
#ifndef DEFTYPE_
#define DEFTYPE_

#ifdef ENABLE_VTUNE
#	include <profiler_vtune.h>
#else
#	define ProfileScopeEvent(x)
#	define THREAD_NAME(n,i)
#	define PROFILE_INIT()
#	define PROFILE_PAUSE()
#	define PROFILE_RESUME()
#endif

#if (__cplusplus>= 201103L) || (_MSC_VER >= 1800) //fucking msvc
#	include <unordered_set>
#	include <unordered_map>
#	define HASH_SET std::unordered_set
#	define HASH_MAP std::unordered_map
#	define HASH_MULTISET std::unordered_multiset
#	define HASH_MULTIMAP std::unordered_multimap
#	define HASH std::hash
#else
#	include<boost/unordered_set.hpp>
#	include<boost/unordered_map.hpp>
#	define HASH_SET boost::unordered_set
#	define HASH_MAP boost::unordered_map
#	define HASH_MULTISET boost::unordered_multiset
#	define HASH_MULTIMAP boost::unordered_multimap
#endif

/** \brief define standard headers
 * \{
 */
#include <set>
#include <map>
#include <string>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stdint.h>
#include <cassert>
#include <exception>
#include <iterator>
#include <iostream>
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <errno.h>
#include <stdexcept>
#include <sstream>
#include <limits.h>
#include <functional>
#include <ctype.h> //isdigit ...
//\}

/** \brief define shared ptr
 * \{
 */
#if defined (__QNX__)
#	include <boost/shared_ptr.hpp>
#	define SHARED_PTR boost::shared_ptr 
#elif defined(unix) || defined(__MINGW32__)//#if defined (__QNX__)

#	if (__cplusplus>= 201103L)
#		ifdef __MINGW32__//version of gcc
#			include <tr1/memory>
#			include<tr1/shared_ptr.h>
#			define SHARED_PTR std::tr1::shared_ptr
#		else
#			include<shared_ptr.h>
#			define SHARED_PTR std::shared_ptr
#		endif
#	else //#if (__cplusplus>= 201103L)
# 		include <tr1/memory>
#		define SHARED_PTR std::tr1::shared_ptr
#	endif//#if (__cplusplus>= 201103L)
#elif defined(_WIN32)
#	define SHARED_PTR std::shared_ptr 
#endif //#elif defined(_WIN32)
//\}

/** \brief define system headers
 * \{
 */
#ifdef _WIN32
#	ifdef _MSC_VER
#		ifndef NOMINMAX
#			define NOMINMAX
#		endif
#		include <win_unistd.h>
#		pragma warning(disable : 4290)
#		pragma warning(disable : 4996)
#		pragma warning(disable : 4355)
#		pragma warning(disable : 4251)
#	else
#		include <unistd.h> //mingw,cygwin
#	endif

#	include <winsock2.h>
#	include <windows.h>

#	ifdef _MSC_VER
#		include <memory>
#		undef uuid_t
#	endif
#else
#	include <unistd.h>
#	ifdef  __QNX__
#		include <sys/neutrino.h>
#	endif
#endif
//\}

#if   defined(__QNX__)||defined(unix) ||  defined(__MINGW32__)
#	define HAVE_POSIX_SEMAPHORES
#	include <pthread.h>                        // POSIX threads support
#endif


#ifdef  __QNX__
#	include <sys/time.h>
#else
#	include <ctime>
#endif

#include <macro_attributes.h>
#include <endian_type.h>
#include <UType/little_big_endian_t.h>

#include <UType/CAssertException.h>
#include <logging/share_trace.h>

#include <type_manip.h>
#include <UType/CDenyCopying.h>
#include <UType/CRAII.h>
#include <UType/atomic_t.h>
#include <UType/IAllocater.h>
#include <UType/CCOWPtr.h>
#include <UType/CFlags.h>
#include <UType/CMutex.h>
#include <UType/CCondvar.h>
#include <UType/CSemaphore.h>
#include <UType/allocators.h>
#include <UType/CText.h>
#include <UType/strtonum.h>
#include <UType/numtostr.h>
#include <uclock.h>
#include <UType/CSingleton.h>
#include <UType/CAntiHang.h>
#include <UType/CCheckNoMultiThread.h>
#include <UType/CTypeInfo.h>
#include <UType/CIntrusived.h>
#include <UType/intrusive_ptr.h>
#include <FloatCompare.h>
#include <UType/SmartField.h>
#include <UType/CBuffer.h>
#include <UType/CConfig.h>
#include <UType/version.h>
#include <UType/uuid.h>
#include <UType/cb_t.h>
#include <UType/CEvent.h>
#include <UType/CEvents.h>
#include <UType/deffunc.h>

#include <UType/CIPCSem.h>
#include <UType/CIPCSignalEvent.h>

#include <UType/CThread.h>
#include <UType/CThreadPool.h>

#include <UType/CSafeData.h>
#include <UType/CSafeQueue.h>
#include <UType/CWaitingQueue.h>

#include <UType/dymamic_modules.h>
#include <UType/IFactory.h>
#include <UType/CFactoryManager.h>
#include <UType/CFactoryRegisterer.h>
#include <UType/CResources.h>

#include <UType/CAddress.h>

#include <UType/CCOWPtrTest.h>
#endif /*DEFTYPE_*/
